# Generated by Django 3.0.3 on 2020-04-29 13:41

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('u_username', models.CharField(max_length=32, unique=True, verbose_name='用户名')),
                ('u_password', models.CharField(max_length=256, verbose_name='用户密码')),
                ('u_email', models.CharField(max_length=64, unique=True, verbose_name='用户邮箱')),
                ('u_icon', models.ImageField(upload_to='Usericons/%Y/%m/%d/', verbose_name='用户头像')),
                ('is_active', models.BooleanField(default=False, verbose_name='是否激活')),
                ('is_delete', models.BooleanField(default=False, verbose_name='是否注销')),
                ('APIkey', models.CharField(default='asdfghjklzxcv', max_length=30, verbose_name='APIkey')),
                ('u_score', models.ImageField(default=100, upload_to='', verbose_name='点数')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'CMS_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_title', models.CharField(default='', max_length=50, verbose_name='文章标题')),
                ('a_time', models.DateTimeField(verbose_name='文章时间')),
                ('a_source', models.CharField(default='', max_length=50, verbose_name='文章来源')),
                ('a_author', models.CharField(default='', max_length=30, verbose_name='文章作者')),
                ('a_content', models.TextField(verbose_name='文章内容')),
                ('add_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='添加时间')),
                ('a_status', models.IntegerField(default=1, verbose_name='文章状态')),
                ('a_adder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '文章信息',
                'verbose_name_plural': '文章信息',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='分类')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='标签')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('N_title', models.CharField(default='赶紧给这个笔记取个名字吧！', max_length=50, verbose_name='笔记标题')),
                ('N_content', models.TextField(verbose_name='笔记内容')),
                ('N_brief', models.CharField(blank=True, max_length=100, null=True, verbose_name='笔记摘要')),
                ('N_idea', models.CharField(blank=True, max_length=200, null=True, verbose_name='笔记想法')),
                ('N_pic', models.ImageField(upload_to='pictures/%Y/%m/%d/', verbose_name='笔记插图')),
                ('N_istop', models.IntegerField(blank=True, null=True, verbose_name='置顶级别')),
                ('N_create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('N_update_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='更新时间')),
                ('N_status', models.IntegerField(default=1, verbose_name='笔记状态')),
                ('N_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Category', verbose_name='笔记分类')),
                ('N_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('N_tags', models.ManyToManyField(blank=True, null=True, to='users.Tag', verbose_name='笔记标签')),
                ('reference', models.ManyToManyField(blank=True, null=True, to='users.Article', verbose_name='相关文章')),
            ],
            options={
                'verbose_name': '笔记信息',
                'verbose_name_plural': '笔记信息',
            },
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('F_name', models.CharField(max_length=32, unique=True, verbose_name='订阅源名称')),
                ('F_URL', models.CharField(max_length=64, unique=True, verbose_name='订阅源URL')),
                ('F_status', models.IntegerField(default=1, verbose_name='订阅源状态')),
                ('F_icon', models.ImageField(upload_to='RSSicons/%Y/%m/%d/', verbose_name='订阅源图标')),
                ('Subscription_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='订阅时间')),
                ('F_Subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '订阅源信息',
                'verbose_name_plural': '订阅源信息',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='a_feed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.Feed'),
        ),
    ]
